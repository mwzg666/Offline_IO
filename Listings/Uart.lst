C251 COMPILER V5.60.0,  Uart                                                               13/10/23  16:12:42  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Uart
OBJECT MODULE PLACED IN Uart.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE uart\Uart.c XSMALL INTR2 OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Ads1110;.\i
                    -ic;.\IO;.\mcp4725;.\MwPro;.\uart;.\adc12;.\User) PRINT(.\Listings\Uart.lst) OBJECT(Uart.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "uart.h"
    3          #include "io.h"
    4          
    5          u16 Rx1_Timer  = 0;
    6          
    7          u8  TX1_Cnt;    //发送计数
    8          u8  RX1_Cnt;    //接收计数
    9          bit B_TX1_Busy; //发送忙标志
   10          
   11          u8 xdata RX1_Buffer[MAX_LENGTH]; //接收缓冲
   12          
   13          void UART1_config()
   14          {
   15   1          /*********** 波特率使用定时器1 *****************/
   16   1          {
   17   2              TR1 = 0;
   18   2              AUXR &= ~0x01;      //S1 BRT Use Timer1;
   19   2              AUXR |=  (1<<6);    //Timer1 set as 1T mode
   20   2              TMOD &= ~(1<<6);    //Timer1 set As Timer
   21   2              TMOD &= ~0x30;      //Timer1_16bitAutoReload;
   22   2              TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate) / 256);
   23   2              TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate) % 256);
   24   2              ET1 = 0;    //禁止中断
   25   2              INTCLKO &= ~0x02;  //不输出时钟
   26   2              TR1  = 1;
   27   2          }
   28   1      
   29   1          /*************************************************/
   30   1          //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 
   31   1          //           0x80: 9位数据,固定波特率, 0xc0: 9位数据,可变波特率 
   32   1      
   33   1          SCON = (SCON & 0x3f) | 0x40; 
   34   1      
   35   1          PS  = 0;    //中断高优先级
   36   1          PSH = 0;
   37   1          //PS  = 1;    //高优先级中断
   38   1          ES  = 1;    //允许中断
   39   1          REN = 1;    //允许接收
   40   1          
   41   1          //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 
   42   1          //                 0x80: P1.6 P1.7, 0xC0: P4.3 P4.4
   43   1          P_SW1 &= 0x3f;
   44   1          P_SW1 |= 0x00;  
   45   1          
   46   1          B_TX1_Busy = 0;
   47   1          TX1_Cnt = 0;
   48   1          RX1_Cnt = 0;
   49   1      }
   50          
   51          void UART1_int (void) interrupt 4
   52          {
   53   1          if(RI)
   54   1          {
   55   2              RI = 0;
   56   2              Rx1_Timer = 0;
   57   2              RX1_Buffer[RX1_Cnt] = SBUF;
   58   2              
C251 COMPILER V5.60.0,  Uart                                                               13/10/23  16:12:42  PAGE 2   

   59   2              if(++RX1_Cnt >= MAX_LENGTH)   
   60   2              {
   61   3                  RX1_Cnt = 0;
   62   3              }
   63   2          }
   64   1      
   65   1          if(TI)
   66   1          {
   67   2              TI = 0;
   68   2              B_TX1_Busy = 0;
   69   2          }
   70   1      }
   71          
   72          void Uart1Send(u8 *buf, u8 len)
   73          {
   74   1          u8 i;
   75   1          for (i=0;i<len;i++)     
   76   1          {
   77   2              SBUF = buf[i];
   78   2              B_TX1_Busy = 1;
   79   2              while(B_TX1_Busy);
   80   2          }
   81   1      }
   82          
   83          void Uart1Hnd()
   84          {
   85   1          if (Rx1_Timer > 20)
   86   1          {
   87   2              Rx1_Timer = 0;
   88   2      
   89   2              memcpy(RecvBuf,RX1_Buffer, RX1_Cnt);
   90   2              RecLength = RX1_Cnt;
   91   2              ClearUart1Buf();
   92   2              
   93   2              HndUartData();
   94   2          }
   95   1      }
   96          
   97          
   98          //重定向Printf
   99          char putchar(char c )
  100          {
  101   1          SBUF = c;
  102   1          while(!TI);
  103   1          TI = 0;
  104   1          return c;
  105   1      }
  106          
  107          void ClearUart1Buf()
  108          {
  109   1          memset(RX1_Buffer,0,MAX_LENGTH);
  110   1          RX1_Cnt = 0;
  111   1      }
  112          
  113          
  114          
  115          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       334     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       200     ------
C251 COMPILER V5.60.0,  Uart                                                               13/10/23  16:12:42  PAGE 3   

  xdata-const size     =    ------     ------
  edata size           =        11     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         6     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
